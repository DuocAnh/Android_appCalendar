// Generated by view binder compiler. Do not edit!
package vn.edu.tlu.nhom7.calendar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.tlu.nhom7.calendar.R;

public final class ActivityUpdateTaskBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnUpdateTask;

  @NonNull
  public final EditText etDate;

  @NonNull
  public final EditText etEndTime;

  @NonNull
  public final EditText etLocation;

  @NonNull
  public final EditText etStartTime;

  @NonNull
  public final EditText etTaskDescription;

  @NonNull
  public final EditText etTaskName;

  @NonNull
  public final ImageView imageAlarmTime;

  @NonNull
  public final ImageView imageCalendar;

  @NonNull
  public final ImageView imageColor;

  @NonNull
  public final ImageView imageEndTime;

  @NonNull
  public final ImageView imageStartTime;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final Spinner spAlarmTime;

  @NonNull
  public final Spinner spColor;

  @NonNull
  public final TextView title;

  private ActivityUpdateTaskBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnUpdateTask, @NonNull EditText etDate, @NonNull EditText etEndTime,
      @NonNull EditText etLocation, @NonNull EditText etStartTime,
      @NonNull EditText etTaskDescription, @NonNull EditText etTaskName,
      @NonNull ImageView imageAlarmTime, @NonNull ImageView imageCalendar,
      @NonNull ImageView imageColor, @NonNull ImageView imageEndTime,
      @NonNull ImageView imageStartTime, @NonNull ConstraintLayout main,
      @NonNull Spinner spAlarmTime, @NonNull Spinner spColor, @NonNull TextView title) {
    this.rootView = rootView;
    this.btnUpdateTask = btnUpdateTask;
    this.etDate = etDate;
    this.etEndTime = etEndTime;
    this.etLocation = etLocation;
    this.etStartTime = etStartTime;
    this.etTaskDescription = etTaskDescription;
    this.etTaskName = etTaskName;
    this.imageAlarmTime = imageAlarmTime;
    this.imageCalendar = imageCalendar;
    this.imageColor = imageColor;
    this.imageEndTime = imageEndTime;
    this.imageStartTime = imageStartTime;
    this.main = main;
    this.spAlarmTime = spAlarmTime;
    this.spColor = spColor;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnUpdateTask;
      Button btnUpdateTask = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdateTask == null) {
        break missingId;
      }

      id = R.id.etDate;
      EditText etDate = ViewBindings.findChildViewById(rootView, id);
      if (etDate == null) {
        break missingId;
      }

      id = R.id.etEndTime;
      EditText etEndTime = ViewBindings.findChildViewById(rootView, id);
      if (etEndTime == null) {
        break missingId;
      }

      id = R.id.etLocation;
      EditText etLocation = ViewBindings.findChildViewById(rootView, id);
      if (etLocation == null) {
        break missingId;
      }

      id = R.id.etStartTime;
      EditText etStartTime = ViewBindings.findChildViewById(rootView, id);
      if (etStartTime == null) {
        break missingId;
      }

      id = R.id.etTaskDescription;
      EditText etTaskDescription = ViewBindings.findChildViewById(rootView, id);
      if (etTaskDescription == null) {
        break missingId;
      }

      id = R.id.etTaskName;
      EditText etTaskName = ViewBindings.findChildViewById(rootView, id);
      if (etTaskName == null) {
        break missingId;
      }

      id = R.id.imageAlarmTime;
      ImageView imageAlarmTime = ViewBindings.findChildViewById(rootView, id);
      if (imageAlarmTime == null) {
        break missingId;
      }

      id = R.id.imageCalendar;
      ImageView imageCalendar = ViewBindings.findChildViewById(rootView, id);
      if (imageCalendar == null) {
        break missingId;
      }

      id = R.id.imageColor;
      ImageView imageColor = ViewBindings.findChildViewById(rootView, id);
      if (imageColor == null) {
        break missingId;
      }

      id = R.id.imageEndTime;
      ImageView imageEndTime = ViewBindings.findChildViewById(rootView, id);
      if (imageEndTime == null) {
        break missingId;
      }

      id = R.id.imageStartTime;
      ImageView imageStartTime = ViewBindings.findChildViewById(rootView, id);
      if (imageStartTime == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.spAlarmTime;
      Spinner spAlarmTime = ViewBindings.findChildViewById(rootView, id);
      if (spAlarmTime == null) {
        break missingId;
      }

      id = R.id.spColor;
      Spinner spColor = ViewBindings.findChildViewById(rootView, id);
      if (spColor == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityUpdateTaskBinding((ConstraintLayout) rootView, btnUpdateTask, etDate,
          etEndTime, etLocation, etStartTime, etTaskDescription, etTaskName, imageAlarmTime,
          imageCalendar, imageColor, imageEndTime, imageStartTime, main, spAlarmTime, spColor,
          title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
