// Generated by view binder compiler. Do not edit!
package vn.edu.tlu.nhom7.calendar.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import vn.edu.tlu.nhom7.calendar.R;

public final class ActivityShowTaskBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final TextView showAlarmTime;

  @NonNull
  public final TextView showDate;

  @NonNull
  public final TextView showEndTime;

  @NonNull
  public final ImageView showImageAlarmTime;

  @NonNull
  public final ImageView showImageColor;

  @NonNull
  public final ImageView showImageDate;

  @NonNull
  public final ImageView showImageLocation;

  @NonNull
  public final TextView showLocation;

  @NonNull
  public final TextView showSpace;

  @NonNull
  public final TextView showStartTime;

  @NonNull
  public final TextView showTaskDescription;

  @NonNull
  public final TextView showTaskName;

  @NonNull
  public final TextView space;

  @NonNull
  public final TextView title;

  private ActivityShowTaskBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout main, @NonNull TextView showAlarmTime, @NonNull TextView showDate,
      @NonNull TextView showEndTime, @NonNull ImageView showImageAlarmTime,
      @NonNull ImageView showImageColor, @NonNull ImageView showImageDate,
      @NonNull ImageView showImageLocation, @NonNull TextView showLocation,
      @NonNull TextView showSpace, @NonNull TextView showStartTime,
      @NonNull TextView showTaskDescription, @NonNull TextView showTaskName,
      @NonNull TextView space, @NonNull TextView title) {
    this.rootView = rootView;
    this.main = main;
    this.showAlarmTime = showAlarmTime;
    this.showDate = showDate;
    this.showEndTime = showEndTime;
    this.showImageAlarmTime = showImageAlarmTime;
    this.showImageColor = showImageColor;
    this.showImageDate = showImageDate;
    this.showImageLocation = showImageLocation;
    this.showLocation = showLocation;
    this.showSpace = showSpace;
    this.showStartTime = showStartTime;
    this.showTaskDescription = showTaskDescription;
    this.showTaskName = showTaskName;
    this.space = space;
    this.title = title;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShowTaskBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShowTaskBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_show_task, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShowTaskBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.show_alarmTime;
      TextView showAlarmTime = ViewBindings.findChildViewById(rootView, id);
      if (showAlarmTime == null) {
        break missingId;
      }

      id = R.id.show_date;
      TextView showDate = ViewBindings.findChildViewById(rootView, id);
      if (showDate == null) {
        break missingId;
      }

      id = R.id.show_endTime;
      TextView showEndTime = ViewBindings.findChildViewById(rootView, id);
      if (showEndTime == null) {
        break missingId;
      }

      id = R.id.show_imageAlarmTime;
      ImageView showImageAlarmTime = ViewBindings.findChildViewById(rootView, id);
      if (showImageAlarmTime == null) {
        break missingId;
      }

      id = R.id.show_imageColor;
      ImageView showImageColor = ViewBindings.findChildViewById(rootView, id);
      if (showImageColor == null) {
        break missingId;
      }

      id = R.id.show_imageDate;
      ImageView showImageDate = ViewBindings.findChildViewById(rootView, id);
      if (showImageDate == null) {
        break missingId;
      }

      id = R.id.show_imageLocation;
      ImageView showImageLocation = ViewBindings.findChildViewById(rootView, id);
      if (showImageLocation == null) {
        break missingId;
      }

      id = R.id.show_location;
      TextView showLocation = ViewBindings.findChildViewById(rootView, id);
      if (showLocation == null) {
        break missingId;
      }

      id = R.id.show_space;
      TextView showSpace = ViewBindings.findChildViewById(rootView, id);
      if (showSpace == null) {
        break missingId;
      }

      id = R.id.show_startTime;
      TextView showStartTime = ViewBindings.findChildViewById(rootView, id);
      if (showStartTime == null) {
        break missingId;
      }

      id = R.id.show_taskDescription;
      TextView showTaskDescription = ViewBindings.findChildViewById(rootView, id);
      if (showTaskDescription == null) {
        break missingId;
      }

      id = R.id.show_taskName;
      TextView showTaskName = ViewBindings.findChildViewById(rootView, id);
      if (showTaskName == null) {
        break missingId;
      }

      id = R.id.space;
      TextView space = ViewBindings.findChildViewById(rootView, id);
      if (space == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      return new ActivityShowTaskBinding((ConstraintLayout) rootView, main, showAlarmTime, showDate,
          showEndTime, showImageAlarmTime, showImageColor, showImageDate, showImageLocation,
          showLocation, showSpace, showStartTime, showTaskDescription, showTaskName, space, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
